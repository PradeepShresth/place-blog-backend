{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","logoutTimer","MainHeader","children","NavLinks","auth","useContext","to","exact","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Fragment","Users","React","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","App","routes","setToken","tokenExpiryDate","setTokenExpiryDate","setUserId","useCallback","uid","expirationDate","tokenExpirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.c6ec36f4.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport const AuthContext = createContext({\r\n    isLoggedIn: false, \r\n    userId: null,\r\n    token: null,\r\n    login: () => {},\r\n    logout: () => {\r\n\r\n    }\r\n});","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import { useState, useCallback, useEffect } from 'react';\r\n\r\nlet logoutTimer;\r\n\r\nexport const useAuth = () => {\r\n    const [token, setToken] = useState(false);\r\n  const [tokenExpiryDate, setTokenExpiryDate] = useState();\r\n  const [ userId, setUserId ] = useState(false);\r\n\r\n  const login = useCallback((uid, token, expirationDate) => {\r\n    setToken(token);\r\n    setUserId(uid);\r\n    const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n    setTokenExpiryDate(tokenExpirationDate);\r\n    localStorage.setItem(\r\n      'userData', \r\n      JSON.stringify({\r\n        userId: uid, \r\n        token: token, \r\n        expiration: tokenExpirationDate.toISOString()\r\n      })\r\n    )\r\n  }, []);\r\n  \r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setUserId(null);\r\n    setTokenExpiryDate(null);\r\n    localStorage.removeItem('userData');\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token && tokenExpiryDate) {\r\n      const remainingTime = tokenExpiryDate.getTime() - new Date();\r\n      logoutTimer= setTimeout(logout, remainingTime);\r\n    } else {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, [token])\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem('userData'));\r\n    if (storedData && storedData.token && new Date(storedData.expiration) > new Date()) {\r\n      login(storedData.userId, storedData.token, new Date(storedData.expiration))\r\n    }\r\n  }, [login]);\r\n\r\n  return { token, login, logout, userId }\r\n}","import React from 'react';\r\n\r\nimport './MainHeader.css';\r\n\r\nconst MainHeader = props => {\r\n    return (\r\n        <header className=\"main-header\">\r\n            {props.children}\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default MainHeader;","import React, { useContext } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { AuthContext } from '../../context/auth-context';\r\n\r\nimport './NavLinks.css';\r\n\r\nconst NavLinks = props => {\r\n    const auth = useContext(AuthContext);\r\n\r\n    return (\r\n        <ul className=\"nav-links\">\r\n            <li>\r\n                <NavLink to=\"/\" exact>All USERS</NavLink>\r\n            </li>\r\n            {auth.isLoggedIn && (\r\n                <li>\r\n                    <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\r\n                </li>\r\n            )}\r\n            {auth.isLoggedIn && (\r\n                <li>\r\n                    <NavLink to=\"/places/new\">ADD PLACES</NavLink>\r\n                </li>\r\n            )}\r\n            {!auth.isLoggedIn && (\r\n                <li>\r\n                    <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\r\n                </li>\r\n            )}\r\n            {auth.isLoggedIn && (\r\n                <li>\r\n                    <button onClick={auth.logout}>LOGOUT</button>\r\n                </li>\r\n            )}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default NavLinks;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport './SideDrawer.css';\r\n\r\nconst SideDrawer = props => {\r\n   const content = (\r\n       <CSSTransition in={props.show} timeout={200} classNames=\"slide-in-left\" mountOnEnter unmountOnExit>\r\n            <aside className=\"side-drawer\" onClick={props.onClick}>\r\n                {props.children}\r\n            </aside>\r\n        </CSSTransition>\r\n    )\r\n    return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\r\n}\r\n\r\nexport default SideDrawer;","import React, {useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport MainHeader from './MainHeader';\r\nimport NavLinks from './NavLinks';\r\nimport SideDrawer from './SideDrawer';\r\nimport Backdrop from '../UIElements/Backdrop';\r\n\r\nimport './MainNavigation.css';\r\n\r\nconst MainNavigation = props => {\r\n    const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n\r\n    const openDrawerHandler = () => {\r\n        setDrawerIsOpen(true);\r\n    }\r\n\r\n    const closeDrawerHandler = () => {\r\n        setDrawerIsOpen(false);\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            {drawerIsOpen && <Backdrop onClick = {closeDrawerHandler}/>}\r\n            <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\r\n                <nav className=\"main-navigation__drawer-nav\">\r\n                    <NavLinks />\r\n                </nav>\r\n            </SideDrawer>\r\n            <MainHeader>\r\n                <button className=\"main-navigation__menu-btn\" onClick={openDrawerHandler}>\r\n                    <span />\r\n                    <span />\r\n                    <span />\r\n                </button>\r\n                <h1 className=\"main-navigation__title\">\r\n                    <Link to=\"/\">Your Places</Link>\r\n                </h1>\r\n                <nav className=\"main-navigation__header-nav\" >\r\n                    <NavLinks />\r\n                </nav>\r\n            </MainHeader>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default MainNavigation;","import React, { Suspense } from 'react';\nimport {BrowserRouter as Router, Route, Redirect, Switch} from 'react-router-dom';\n\n// import Users from './user/pages/Users';\n// import NewPlace from './places/pages/NewPlace';\n// import UserPlaces from './places/pages/UserPlaces';\n// import UpdatePlace from './places/pages/UpdatePlace';\n// import Auth from './user/pages/Auth';\nimport LoadingSpinner from './shared/components/UIElements/LoadingSpinner';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport {AuthContext} from './shared/context/auth-context';\nimport { useAuth } from './shared/hooks/auth-hook';\n\nconst Users = React.lazy(() => import('./user/pages/Users'));\nconst NewPlace = React.lazy(() => import('./places/pages/NewPlace'));\nconst UserPlaces = React.lazy(() => import('./places/pages/UserPlaces'));\nconst UpdatePlace = React.lazy(() => import('./places/pages/UpdatePlace'));\nconst Auth = React.lazy(() => import('./user/pages/Auth'));\n\nconst App = () => {\n  const { token, login, logout, userId } = useAuth();\n\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\">\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider \n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login, \n        logout: logout}}\n    >\n      <Router>\n        <MainNavigation />\n        <main>\n          <Suspense fallback={\n            <div className=\"center\">\n              <LoadingSpinner />\n            </div>\n          }>\n            {routes}\n          </Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}